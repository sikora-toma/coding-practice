// you can use includes, for example:
#include <algorithm>

// you can write to stdout for debugging purposes, e.g.
// cout << "this is a debug message" << endl;

typedef struct p{
    int price;
    int index;
} p;

bool compare(p a, p b){
    if(a.price<b.price) return true;
    return false;
}

int solution(vector<int> &A) {
    if(A.size()==0) return 0;
    // write your code in C++14 (g++ 6.2.0)
    int mx = 0, mn = 0, res = 0;
    for(int i = 0; i<A.size();i++)
        if(A[i]>A[mx]) mx = i;
        else if(A[i]<A[mn])mn=i;
    if(mx>mn) return A[mx]-A[mn];
    vector<p> ps;
    for(int i = 0; i<A.size();i++){
        p temp;
        temp.index = i;
        temp.price = A[i];
        ps.push_back(temp);
    }
    sort(ps.begin(), ps.end(), compare);
    for(int i = ps.size()-1; i>=0; i--){
        for(int j = 0; j<i; j++)
            if(ps[i].index>ps[j].index && ps[i].price-ps[j].price>res)
                res = ps[i].price-ps[j].price;
    }
    return res;
}